{"version":3,"sources":["components/AvatarInCard.js","components/layout/CardGridLayout.js","components/AnsweredTab.js","components/UnansweredTab.js","components/pages/HomePage.js","actions/authedUser.js","components/pages/LoginPage.js","actions/currentPage.js","components/pages/LeaderBoard.js","utils/_DATA.js","utils/api.js","actions/questions.js","actions/users.js","components/pages/NewQuestion.js","actions/shared.js","components/layout/MyLayout.js","components/NavBar.js","components/VotedCard.js","components/UnvotedCard.js","components/pages/PollDetail.js","components/pages/ErrorPage.js","App.js","reducers/index.js","reducers/authedUser.js","reducers/questions.js","reducers/users.js","reducers/currentPage.js","middleware/logger.js","middleware/index.js","index.js"],"names":["AvatarInCard","props","Grid","hoverable","style","width","boxShadow","src","avatarURL","size","margin","CardGridLayout","data","type","children","marginTop","border","borderTop","headStyle","backgroundColor","borderBottom","title","author","fontSize","optionOne","text","to","id","block","shape","AnsweredTab","users","this","answeredData","map","key","Component","UnansweredTab","unansweredData","tabListNoTitle","tab","HomePage","state","onTabChange","setState","tabList","activeTabKey","unanswered","answered","connect","authedUser","questions","qid","Object","keys","answers","values","filter","q","includes","sort","a","b","timestamp","setAuthedUser","Option","Select","LoginPage","isDisabled","selected","handleChange","value","handleClick","e","dispatch","CardTitle","textAlign","alt","name","marginBottom","onChange","placeholder","user","icon","LoginOutlined","height","disabled","onClick","href","setPage","page","LeaderBoard","colorSet","leaderBoardData","index","rank","fontWeight","answerCount","questionCount","padding","color","totalCount","TrophyTwoTone","twoToneColor","display","length","sarahedo","am8ehyc8byjqgar0jgpub9","loxhs1bqm25b708cmbf3g","tylermcginnis","vthrdm985a262al8qx3do","xj352vofupe1dqz9emx13r","johndoe","votes","optionTwo","_saveQuestion","question","Promise","res","rej","formattedQuestion","optionOneText","optionTwoText","Math","random","toString","substring","Date","now","formatQuestion","setTimeout","concat","saveQuestionAnswer","answer","_saveQuestionAnswer","handleAddQuestion","getState","showLoading","then","addQuestion","addQuestionToUser","hideLoading","handleAddAnswer","addAnswer","addAnswerToUser","NewQuestion","option1","option2","toHome","target","handleSubmit","allowClear","FormOutlined","hadleInitialData","all","receiveUsers","receiveQuestions","MyLayout","className","SubMenu","Menu","NavBar","handleLogout","selectedKeys","currentPage","mode","Item","HomeFilled","exact","AppstoreAddOutlined","FundFilled","UserOutlined","username","LogoutOutlined","marginLeft","VotedCard","userVote","optionOneCount","optionTwoCount","optionOneRatio","optionTwoRatio","orientation","borderRadius","status","percent","round","strokeColor","UnvotedCard","Group","lineHeight","PollDetail","undefined","isVoted","location","pathname","split","ErrorPage","subTitle","path","component","combineReducers","action","console","log","loadingBar","loadingBarReducer","logger","store","next","group","returnValue","groupEnd","applyMiddleware","thunk","createStore","reducers","middleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2f739bd7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Avatar, Card } from \"antd\";\r\n\r\nfunction AvatarInCard(props) {\r\n  return (\r\n    <Card.Grid\r\n      hoverable={false}\r\n      style={{\r\n        width: \"25%\",\r\n        boxShadow: \"none\",\r\n      }}\r\n    >\r\n      <Avatar src={props.avatarURL} size={96} style={{ margin: \"0 auto\" }} />\r\n    </Card.Grid>\r\n  );\r\n}\r\n\r\nAvatarInCard.propTypes = {\r\n  avatarURL: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default AvatarInCard;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Card, Button } from \"antd\";\r\nimport AvatarInCard from \"../AvatarInCard\";\r\n\r\nfunction CardGridLayout({ data, avatarURL, type, children }) {\r\n  return (\r\n    <Card\r\n      style={{\r\n        marginTop: 16,\r\n        border: \"1px solid #d4d4d5\",\r\n        borderTop: type === \"answered\" ? \"3px solid grey\" : \"3px solid skyblue\",\r\n      }}\r\n      type=\"inner\"\r\n      headStyle={{\r\n        backgroundColor: \"#f3f4f5\",\r\n        borderBottom: \"1px solid #d4d4d5\",\r\n      }}\r\n      title={data.author}\r\n    >\r\n      <AvatarInCard avatarURL={avatarURL}></AvatarInCard>\r\n      <Card.Grid hoverable={false} style={{ width: \"75%\", boxShadow: \"none\" }}>\r\n        <h2>Would you rather...</h2>\r\n        <div style={{ fontSize: \"1rem\" }}>{data.optionOne.text} or...</div>\r\n        {type === \"unanswered\" || type === \"answered\" ? (\r\n          <Link to={`/questions/${data.id}`}>\r\n            <Button\r\n              type={type === \"unanswered\" ? \"primary\" : \"ghost\"}\r\n              block\r\n              shape=\"round\"\r\n              style={{ marginTop: \"15px\" }}\r\n            >\r\n              {type === \"unanswered\" ? \"Answer Poll\" : \"Results\"}\r\n            </Button>\r\n          </Link>\r\n        ) : (\r\n          children\r\n        )}\r\n      </Card.Grid>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default CardGridLayout;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CardGridLayout from \"./layout/CardGridLayout\";\r\n\r\nexport class AnsweredTab extends Component {\r\n  static propTypes = {\r\n    answeredData: PropTypes.array.isRequired,\r\n    users: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {this.props.answeredData.map((data) => (\r\n          <CardGridLayout\r\n            key={data.id}\r\n            avatarURL={users[data.author].avatarURL}\r\n            data={data}\r\n            type=\"answered\"\r\n          ></CardGridLayout>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AnsweredTab;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CardGridLayout from \"./layout/CardGridLayout\";\r\n\r\nexport class UnansweredTab extends Component {\r\n  static propTypes = {\r\n    unansweredData: PropTypes.array.isRequired,\r\n    users: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n    return (\r\n      <>\r\n        {this.props.unansweredData.map((data) => (\r\n          <CardGridLayout\r\n            key={data.id}\r\n            avatarURL={users[data.author].avatarURL}\r\n            data={data}\r\n            type=\"unanswered\"\r\n          ></CardGridLayout>\r\n        ))}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UnansweredTab;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport AnsweredTab from \"../AnsweredTab\";\r\n\r\nimport { Card } from \"antd\";\r\nimport UnansweredTab from \"../UnansweredTab\";\r\n\r\nconst tabListNoTitle = [\r\n  {\r\n    key: \"Unanswered\",\r\n    tab: \"Unanswered\",\r\n  },\r\n  {\r\n    key: \"Answered\",\r\n    tab: \"Answered\",\r\n  },\r\n];\r\nexport class HomePage extends Component {\r\n  state = {\r\n    key: \"Unanswered\",\r\n  };\r\n\r\n  onTabChange = (key, type) => {\r\n    this.setState({ [type]: key });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"30px 0\" }}>\r\n        <Card\r\n          style={{ width: \"100%\", border: \"1px solid #d4d4d5\" }}\r\n          tabList={tabListNoTitle}\r\n          activeTabKey={this.state.key}\r\n          onTabChange={(key) => {\r\n            this.onTabChange(key, \"key\");\r\n          }}\r\n        >\r\n          {this.state.key === \"Unanswered\" ? (\r\n            <UnansweredTab\r\n              unansweredData={this.props.unanswered}\r\n              users={this.props.users}\r\n            ></UnansweredTab>\r\n          ) : (\r\n            <AnsweredTab\r\n              answeredData={this.props.answered}\r\n              users={this.props.users}\r\n            ></AnsweredTab>\r\n          )}\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, users, questions }) {\r\n  const qid = Object.keys(users[authedUser].answers);\r\n  const answered = Object.values(questions)\r\n    .filter((q) => {\r\n      return qid.includes(q.id);\r\n    })\r\n    .sort((a, b) => b.timestamp - a.timestamp);\r\n  const unanswered = Object.values(questions)\r\n    .filter((q) => {\r\n      return !qid.includes(q.id);\r\n    })\r\n    .sort((a, b) => b.timestamp - a.timestamp);\r\n  return {\r\n    qid,\r\n    answered,\r\n    unanswered,\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","export const SET_AUTHED_USER = \"SET_AUTHED_USER\";\r\n\r\nexport function setAuthedUser(id) {\r\n  return {\r\n    type: SET_AUTHED_USER,\r\n    id,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setAuthedUser } from \"../../actions/authedUser\";\r\n\r\nimport { Card, Button, Select, Divider } from \"antd\";\r\nimport { LoginOutlined } from \"@ant-design/icons\";\r\nconst { Option } = Select;\r\n\r\nexport class LoginPage extends Component {\r\n  state = {\r\n    isDisabled: true,\r\n    selected: \"\",\r\n  };\r\n\r\n  handleChange = (value) => {\r\n    this.setState({ selected: value }, () => {\r\n      this.setState({ isDisabled: false });\r\n    });\r\n  };\r\n\r\n  handleClick = (e) => {\r\n    this.props.dispatch(setAuthedUser(this.state.selected));\r\n  };\r\n\r\n  render() {\r\n    const { users } = this.props;\r\n    const { selected } = this.state;\r\n    return (\r\n      <div>\r\n        <Card\r\n          title={<CardTitle />}\r\n          style={{\r\n            textAlign: \"center\",\r\n            margin: \"15px\",\r\n            border: \"1px solid #d4d4d5\",\r\n          }}\r\n          headStyle={{\r\n            backgroundColor: \"#f3f4f5\",\r\n            borderBottom: \"1px solid #d4d4d5\",\r\n          }}\r\n        >\r\n          {users[selected] && (\r\n            <img\r\n              src={users[selected].avatarURL}\r\n              width=\"50%\"\r\n              alt={users[selected].name}\r\n            />\r\n          )}\r\n\r\n          <h1>Sign In</h1>\r\n\r\n          <Divider />\r\n\r\n          <Select\r\n            style={{ width: \"100%\", marginBottom: \"20px\" }}\r\n            onChange={this.handleChange}\r\n            placeholder=\"Select your ID\"\r\n            size=\"large\"\r\n          >\r\n            {Object.keys(users).map((user) => (\r\n              <Option key={user} value={user} style={{ fontSize: \"1rem\" }}>\r\n                {user}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n\r\n          <Button\r\n            type=\"primary\"\r\n            block\r\n            icon={<LoginOutlined />}\r\n            style={{ height: \"40px\", fontSize: \"1rem\" }}\r\n            disabled={this.state.isDisabled}\r\n            onClick={this.handleClick}\r\n          >\r\n            Login\r\n          </Button>\r\n        </Card>\r\n        <div style={{ textAlign: \"center\" }}>\r\n          Icons made by{\" \"}\r\n          <a href=\"https://www.flaticon.com/authors/freepik\" title=\"Freepik\">\r\n            Freepik\r\n          </a>{\" \"}\r\n          from{\" \"}\r\n          <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n            www.flaticon.com\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CardTitle() {\r\n  return (\r\n    <>\r\n      <h3>Welcome to the Would You Rather App!</h3>\r\n      <p style={{ marginBottom: 0 }}>Please sign in to continue</p>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  // const avatars = Object.values(users).map((user) => ({\r\n  //   [user.id]: user.avatarURL,\r\n  // }));\r\n  return {\r\n    users,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LoginPage);\r\n","export const SET_PAGE = \"SET_PAGE\";\r\n\r\nexport function setPage(page) {\r\n  return {\r\n    type: SET_PAGE,\r\n    page,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Card, Divider } from \"antd\";\r\nimport { TrophyTwoTone } from \"@ant-design/icons\";\r\nimport AvatarInCard from \"../AvatarInCard\";\r\nimport { setPage } from \"../../actions/currentPage\";\r\n\r\nexport class LeaderBoard extends Component {\r\n  state = {\r\n    colorSet: [\"#fbbd08\", \"#767676\", \"#f2711c\"],\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(setPage(\"leaderboard\"));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"30px 15px\" }}>\r\n        {this.props.leaderBoardData.map((user, index) => (\r\n          <Card\r\n            key={user.id}\r\n            style={{\r\n              width: \"100%\",\r\n              border: \"1px solid #d4d4d5\",\r\n              borderTop: `3px solid ${this.state.colorSet[index]}`,\r\n              marginBottom: \"20px\",\r\n            }}\r\n            headStyle={{\r\n              borderBottom: \"1px solid #d4d4d5\",\r\n            }}\r\n            title={\r\n              <CardTitle\r\n                colorSet={this.state.colorSet}\r\n                title={user.name}\r\n                rank={index}\r\n              ></CardTitle>\r\n            }\r\n          >\r\n            <AvatarInCard avatarURL={user.avatarURL}></AvatarInCard>\r\n\r\n            <Card.Grid\r\n              hoverable={false}\r\n              style={{ width: \"50%\", boxShadow: \"none\" }}\r\n            >\r\n              <div style={{ fontSize: \"1rem\" }}>\r\n                Answered Questions :{\" \"}\r\n                <span style={{ fontWeight: \"bold\" }}>{user.answerCount}</span>\r\n              </div>\r\n              <Divider />\r\n              <div style={{ fontSize: \"1rem\" }}>\r\n                Created Questions :{\" \"}\r\n                <span style={{ fontWeight: \"bold\" }}>{user.questionCount}</span>\r\n              </div>\r\n            </Card.Grid>\r\n            <h2\r\n              style={{\r\n                textAlign: \"center\",\r\n                margin: \"10px 0 0 0\",\r\n              }}\r\n            >\r\n              Total\r\n            </h2>\r\n            <Card.Grid\r\n              hoverable={false}\r\n              style={{\r\n                width: \"25%\",\r\n                boxShadow: \"none\",\r\n                textAlign: \"center\",\r\n                padding: 0,\r\n              }}\r\n            >\r\n              <span\r\n                style={{\r\n                  fontSize: \"3rem\",\r\n                  fontWeight: \"bold\",\r\n                  color: this.state.colorSet[index],\r\n                }}\r\n              >\r\n                {user.totalCount}\r\n              </span>\r\n            </Card.Grid>\r\n          </Card>\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction CardTitle(props) {\r\n  return (\r\n    <>\r\n      <TrophyTwoTone\r\n        twoToneColor={props.colorSet[props.rank]}\r\n        style={{ fontSize: \"2rem\" }}\r\n      />\r\n      <h2 style={{ margin: \"0 1rem\", display: \"inline\" }}>{props.title}</h2>\r\n    </>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ users }) {\r\n  const leaderBoardData = Object.values(users)\r\n    .map((user) => ({\r\n      id: user.id,\r\n      name: user.name,\r\n      avatarURL: user.avatarURL,\r\n      answerCount: Object.values(user.answers).length,\r\n      questionCount: user.questions.length,\r\n      totalCount: Object.values(user.answers).length + user.questions.length,\r\n    }))\r\n    .sort((a, b) => b.totalCount - a.totalCount);\r\n  return {\r\n    leaderBoardData,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(LeaderBoard);\r\n","let users = {\r\n  sarahedo: {\r\n    id: \"sarahedo\",\r\n    name: \"Sarah Edo\",\r\n    avatarURL: \"avatarImg/woman.png\",\r\n    answers: {\r\n      \"8xf0y6ziyjabvozdd253nd\": \"optionOne\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n      am8ehyc8byjqgar0jgpub9: \"optionTwo\",\r\n      loxhs1bqm25b708cmbf3g: \"optionTwo\",\r\n    },\r\n    questions: [\"8xf0y6ziyjabvozdd253nd\", \"am8ehyc8byjqgar0jgpub9\"],\r\n  },\r\n  tylermcginnis: {\r\n    id: \"tylermcginnis\",\r\n    name: \"Tyler McGinnis\",\r\n    avatarURL: \"avatarImg/racer.png\",\r\n    answers: {\r\n      vthrdm985a262al8qx3do: \"optionOne\",\r\n      xj352vofupe1dqz9emx13r: \"optionTwo\",\r\n    },\r\n    questions: [\"loxhs1bqm25b708cmbf3g\", \"vthrdm985a262al8qx3do\"],\r\n  },\r\n  johndoe: {\r\n    id: \"johndoe\",\r\n    name: \"John Doe\",\r\n    avatarURL: \"avatarImg/delivery-boy.png\",\r\n    answers: {\r\n      xj352vofupe1dqz9emx13r: \"optionOne\",\r\n      vthrdm985a262al8qx3do: \"optionTwo\",\r\n      \"6ni6ok3ym7mf1p33lnez\": \"optionTwo\",\r\n    },\r\n    questions: [\"6ni6ok3ym7mf1p33lnez\", \"xj352vofupe1dqz9emx13r\"],\r\n  },\r\n};\r\n\r\nlet questions = {\r\n  \"8xf0y6ziyjabvozdd253nd\": {\r\n    id: \"8xf0y6ziyjabvozdd253nd\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1467166872634,\r\n    optionOne: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"have horrible short term memory\",\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: \"have horrible long term memory\",\r\n    },\r\n  },\r\n  \"6ni6ok3ym7mf1p33lnez\": {\r\n    id: \"6ni6ok3ym7mf1p33lnez\",\r\n    author: \"johndoe\",\r\n    timestamp: 1468479767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"become a superhero\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\", \"sarahedo\"],\r\n      text: \"become a supervillain\",\r\n    },\r\n  },\r\n  am8ehyc8byjqgar0jgpub9: {\r\n    id: \"am8ehyc8byjqgar0jgpub9\",\r\n    author: \"sarahedo\",\r\n    timestamp: 1488579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be telekinetic\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be telepathic\",\r\n    },\r\n  },\r\n  loxhs1bqm25b708cmbf3g: {\r\n    id: \"loxhs1bqm25b708cmbf3g\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1482579767190,\r\n    optionOne: {\r\n      votes: [],\r\n      text: \"be a front-end developer\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"sarahedo\"],\r\n      text: \"be a back-end developer\",\r\n    },\r\n  },\r\n  vthrdm985a262al8qx3do: {\r\n    id: \"vthrdm985a262al8qx3do\",\r\n    author: \"tylermcginnis\",\r\n    timestamp: 1489579767190,\r\n    optionOne: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"find $50 yourself\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"johndoe\"],\r\n      text: \"have your best friend find $500\",\r\n    },\r\n  },\r\n  xj352vofupe1dqz9emx13r: {\r\n    id: \"xj352vofupe1dqz9emx13r\",\r\n    author: \"johndoe\",\r\n    timestamp: 1493579767190,\r\n    optionOne: {\r\n      votes: [\"johndoe\"],\r\n      text: \"write JavaScript\",\r\n    },\r\n    optionTwo: {\r\n      votes: [\"tylermcginnis\"],\r\n      text: \"write Swift\",\r\n    },\r\n  },\r\n};\r\n\r\nfunction generateUID() {\r\n  return (\r\n    Math.random().toString(36).substring(2, 15) +\r\n    Math.random().toString(36).substring(2, 15)\r\n  );\r\n}\r\n\r\nexport function _getUsers() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...users }), 1000);\r\n  });\r\n}\r\n\r\nexport function _getQuestions() {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => res({ ...questions }), 1000);\r\n  });\r\n}\r\n\r\nfunction formatQuestion({ optionOneText, optionTwoText, author }) {\r\n  return {\r\n    id: generateUID(),\r\n    timestamp: Date.now(),\r\n    author,\r\n    optionOne: {\r\n      votes: [],\r\n      text: optionOneText,\r\n    },\r\n    optionTwo: {\r\n      votes: [],\r\n      text: optionTwoText,\r\n    },\r\n  };\r\n}\r\n\r\nexport function _saveQuestion(question) {\r\n  return new Promise((res, rej) => {\r\n    const authedUser = question.author;\r\n    const formattedQuestion = formatQuestion(question);\r\n\r\n    setTimeout(() => {\r\n      questions = {\r\n        ...questions,\r\n        [formattedQuestion.id]: formattedQuestion,\r\n      };\r\n\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          questions: users[authedUser].questions.concat([formattedQuestion.id]),\r\n        },\r\n      };\r\n\r\n      res(formattedQuestion);\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport function _saveQuestionAnswer({ authedUser, qid, answer }) {\r\n  return new Promise((res, rej) => {\r\n    setTimeout(() => {\r\n      users = {\r\n        ...users,\r\n        [authedUser]: {\r\n          ...users[authedUser],\r\n          answers: {\r\n            ...users[authedUser].answers,\r\n            [qid]: answer,\r\n          },\r\n        },\r\n      };\r\n\r\n      questions = {\r\n        ...questions,\r\n        [qid]: {\r\n          ...questions[qid],\r\n          [answer]: {\r\n            ...questions[qid][answer],\r\n            votes: questions[qid][answer].votes.concat([authedUser]),\r\n          },\r\n        },\r\n      };\r\n\r\n      res();\r\n    }, 500);\r\n  });\r\n}\r\n","import {\r\n  _getQuestions,\r\n  _getUsers,\r\n  _saveQuestion,\r\n  _saveQuestionAnswer,\r\n} from \"./_DATA\";\r\n\r\nexport function getInitialData() {\r\n  return Promise.all([_getQuestions(), _getUsers()]).then(\r\n    ([questions, users]) => ({\r\n      users,\r\n      questions,\r\n    })\r\n  );\r\n}\r\n\r\nexport function saveQuestion(question) {\r\n  return _saveQuestion(question);\r\n}\r\n\r\nexport function saveQuestionAnswer(authedUser, qid, answer) {\r\n  return _saveQuestionAnswer({ authedUser, qid, answer });\r\n}\r\n","import { saveQuestion, saveQuestionAnswer } from \"../utils/api\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\r\nimport { addQuestionToUser, addAnswerToUser } from \"./users\";\r\n\r\nexport const RECEIVE_QUESIONS = \"RECEIVE_QUESIONS\";\r\nexport const ADD_QUESTIONS = \"ADD_QUESTIONS\";\r\nexport const ADD_ANSWER = \"ADD_ANSWER\";\r\n\r\nexport function receiveQuestions(questions) {\r\n  return {\r\n    type: RECEIVE_QUESIONS,\r\n    questions,\r\n  };\r\n}\r\n\r\nexport function addQuestion(question) {\r\n  return {\r\n    type: ADD_QUESTIONS,\r\n    question,\r\n  };\r\n}\r\n\r\nexport function addAnswer(authedUser, qid, answer) {\r\n  return {\r\n    type: ADD_ANSWER,\r\n    authedUser,\r\n    qid,\r\n    answer,\r\n  };\r\n}\r\n\r\nexport function handleAddQuestion(optionOneText, optionTwoText) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState();\r\n    dispatch(showLoading());\r\n    return saveQuestion({\r\n      author: authedUser,\r\n      optionOneText,\r\n      optionTwoText,\r\n    })\r\n      .then((q) => {\r\n        dispatch(addQuestion(q));\r\n        dispatch(addQuestionToUser(q));\r\n      })\r\n      .then(() => dispatch(hideLoading()));\r\n  };\r\n}\r\n\r\nexport function handleAddAnswer(qid, answer) {\r\n  return (dispatch, getState) => {\r\n    const { authedUser } = getState();\r\n    dispatch(showLoading());\r\n    return saveQuestionAnswer(authedUser, qid, answer)\r\n      .then(() => {\r\n        dispatch(addAnswer(authedUser, qid, answer));\r\n        dispatch(addAnswerToUser(authedUser, qid, answer));\r\n      })\r\n      .then(() => dispatch(hideLoading()));\r\n  };\r\n}\r\n","export const RECEIVE_USERS = \"RECEIVE_USERS\";\r\nexport const ADD_QUESTION_TO_USER = \"ADD_QUESTION_TO_USER\";\r\nexport const ADD_ANSWER_TO_USER = \"ADD_ANSWER_TO_USER\";\r\n\r\nexport function receiveUsers(users) {\r\n  return {\r\n    type: RECEIVE_USERS,\r\n    users,\r\n  };\r\n}\r\n\r\nexport function addQuestionToUser(question) {\r\n  return {\r\n    type: ADD_QUESTION_TO_USER,\r\n    question,\r\n  };\r\n}\r\n\r\nexport function addAnswerToUser(authedUser, qid, answer) {\r\n  return {\r\n    type: ADD_ANSWER_TO_USER,\r\n    authedUser,\r\n    qid,\r\n    answer,\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { Card, Input, Divider, Button } from \"antd\";\r\nimport { FormOutlined } from \"@ant-design/icons\";\r\nimport { handleAddQuestion } from \"../../actions/questions\";\r\nimport { setPage } from \"../../actions/currentPage\";\r\n\r\nexport class NewQuestion extends Component {\r\n  state = {\r\n    option1: \"\",\r\n    option2: \"\",\r\n    toHome: false,\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    const name = e.target.name;\r\n    this.setState({\r\n      [name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = async (e) => {\r\n    const { option1, option2 } = this.state;\r\n    await this.props.dispatch(handleAddQuestion(option1, option2));\r\n    this.setState({\r\n      option1: \"\",\r\n      option2: \"\",\r\n      toHome: true,\r\n    });\r\n    this.props.dispatch(setPage(\"home\"));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.dispatch(setPage(\"new\"));\r\n  }\r\n\r\n  render() {\r\n    const { option1, option2, toHome } = this.state;\r\n    const isDisabled = option1 === \"\" || option2 === \"\";\r\n\r\n    if (toHome) {\r\n      return <Redirect to=\"/\"></Redirect>;\r\n    }\r\n\r\n    return (\r\n      <div style={{ margin: \"30px 15px\" }}>\r\n        <Card\r\n          title=\"Create a New Poll\"\r\n          style={{\r\n            width: \"100%\",\r\n            border: \"1px solid #d4d4d5\",\r\n            marginBottom: \"20px\",\r\n          }}\r\n          headStyle={{\r\n            backgroundColor: \"#f3f4f5\",\r\n            borderBottom: \"1px solid #d4d4d5\",\r\n            fontSize: \"1.5rem\",\r\n          }}\r\n        >\r\n          <h3>Complete the Question: </h3>\r\n          <h1>Would you rather...</h1>\r\n          <Input\r\n            name=\"option1\"\r\n            size=\"large\"\r\n            placeholder=\"Enter Option One\"\r\n            allowClear\r\n            onChange={this.handleChange}\r\n          />\r\n          <Divider>OR</Divider>\r\n          <Input\r\n            name=\"option2\"\r\n            size=\"large\"\r\n            placeholder=\"Enter Option Two\"\r\n            allowClear\r\n            onChange={this.handleChange}\r\n          />\r\n\r\n          <Button\r\n            type=\"primary\"\r\n            block\r\n            icon={<FormOutlined />}\r\n            size=\"large\"\r\n            style={{ marginTop: \"20px\" }}\r\n            disabled={isDisabled}\r\n            onClick={this.handleSubmit}\r\n          >\r\n            Submit\r\n          </Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(NewQuestion);\r\n","import { getInitialData } from \"../utils/api\";\r\nimport { receiveUsers } from \"./users\";\r\nimport { receiveQuestions } from \"./questions\";\r\nimport { showLoading, hideLoading } from \"react-redux-loading-bar\";\r\n// import { setAuthedUser } from \"./authedUser\";\r\n\r\n// NOTE - below this comment makes not login is default\r\n// const authedUser = \"johndoe\";\r\n\r\nexport function hadleInitialData() {\r\n  return (dispatch) => {\r\n    dispatch(showLoading());\r\n    return getInitialData().then(({ users, questions }) => {\r\n      dispatch(receiveUsers(users));\r\n      dispatch(receiveQuestions(questions));\r\n      // NOTE - below this comment makes not login is default\r\n      // dispatch(setAuthedUser(authedUser));\r\n      dispatch(hideLoading());\r\n    });\r\n  };\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { hadleInitialData } from \"../../actions/shared\";\r\n\r\nclass MyLayout extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(hadleInitialData());\r\n  }\r\n\r\n  render() {\r\n    return <div className=\"my-layout\">{this.props.children}</div>;\r\n  }\r\n}\r\n\r\nexport default connect()(MyLayout);\r\n","import React, { Component } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { setAuthedUser } from \"../actions/authedUser\";\r\n\r\nimport { Menu } from \"antd\";\r\nimport {\r\n  LogoutOutlined,\r\n  UserOutlined,\r\n  HomeFilled,\r\n  AppstoreAddOutlined,\r\n  FundFilled,\r\n} from \"@ant-design/icons\";\r\nimport { setPage } from \"../actions/currentPage\";\r\n\r\nconst { SubMenu } = Menu;\r\n\r\nexport class NavBar extends Component {\r\n  handleClick = (e) => {\r\n    this.props.dispatch(setPage(e.key));\r\n  };\r\n\r\n  handleLogout = (e) => {\r\n    this.props.dispatch(setAuthedUser(null));\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Menu\r\n        onClick={this.handleClick}\r\n        selectedKeys={[this.props.currentPage]}\r\n        mode=\"horizontal\"\r\n        style={{ fontWeight: \"bold\" }}\r\n      >\r\n        <Menu.Item icon={<HomeFilled />} key=\"home\">\r\n          <NavLink to=\"/\" exact>\r\n            Home\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<AppstoreAddOutlined />} key=\"new\">\r\n          <NavLink to=\"/add\" exact>\r\n            New Poll\r\n          </NavLink>\r\n        </Menu.Item>\r\n        <Menu.Item icon={<FundFilled />} key=\"leaderboard\">\r\n          <NavLink to=\"/leaderboard\" exact>\r\n            Leader Board\r\n          </NavLink>\r\n        </Menu.Item>\r\n\r\n        <SubMenu icon={<UserOutlined />} title={this.props.username}>\r\n          <Menu.Item\r\n            key=\"logout\"\r\n            icon={<LogoutOutlined />}\r\n            style={{ marginLeft: \"auto\" }}\r\n            onClick={this.handleLogout}\r\n          >\r\n            Logout\r\n          </Menu.Item>\r\n        </SubMenu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ authedUser, users, currentPage }) {\r\n  return {\r\n    username: users[authedUser].name,\r\n    currentPage,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(NavBar);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Divider, Progress } from \"antd\";\r\n\r\nexport class VotedCard extends Component {\r\n  static propTypes = {\r\n    userVote: PropTypes.string.isRequired,\r\n    optionOne: PropTypes.object.isRequired,\r\n    optionTwo: PropTypes.object.isRequired,\r\n  };\r\n\r\n  render() {\r\n    const { userVote, optionOne, optionTwo } = this.props;\r\n    const optionOneCount = optionOne.votes.length;\r\n    const optionTwoCount = optionTwo.votes.length;\r\n    const totalCount = optionOneCount + optionTwoCount;\r\n    const optionOneRatio = (optionOneCount / totalCount) * 100;\r\n    const optionTwoRatio = (optionTwoCount / totalCount) * 100;\r\n    return (\r\n      <>\r\n        <Divider orientation=\"left\">Results</Divider>\r\n        <ul>\r\n          <li\r\n            style={{\r\n              border: userVote === \"optionOne\" && \"5px solid #2ecc71\",\r\n              borderRadius: \"15px\",\r\n              padding: \"10px\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            <h3>{optionOne.text}</h3>\r\n            <Progress\r\n              status={userVote === \"optionOne\" ? \"active\" : \"normal\"}\r\n              percent={Math.round(optionOneRatio)}\r\n              strokeColor={\r\n                optionOneRatio >= optionTwoRatio ? \"#2ecc71\" : \"grey\"\r\n              }\r\n            />\r\n            <p>\r\n              {optionOneCount} out of {totalCount} votes\r\n            </p>\r\n          </li>\r\n          <li\r\n            style={{\r\n              border: userVote === \"optionTwo\" && \"5px solid #2ecc71\",\r\n              borderRadius: \"15px\",\r\n              padding: \"10px\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            <h3>{optionTwo.text}</h3>\r\n            <Progress\r\n              status={userVote === \"optionTwo\" ? \"active\" : \"normal\"}\r\n              percent={Math.round(optionTwoRatio)}\r\n              strokeColor={\r\n                optionTwoRatio >= optionOneRatio ? \"#2ecc71\" : \"grey\"\r\n              }\r\n            />\r\n            <p>\r\n              {optionTwoCount} out of {totalCount} votes\r\n            </p>\r\n          </li>\r\n        </ul>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default VotedCard;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Radio, Button } from \"antd\";\r\nimport { handleAddAnswer } from \"../actions/questions\";\r\n\r\nexport class UnvotedCard extends Component {\r\n  static propTypes = {\r\n    optionOne: PropTypes.object.isRequired,\r\n    optionTwo: PropTypes.object.isRequired,\r\n  };\r\n  state = {\r\n    value: \"\",\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    const { value } = this.state;\r\n    const { dispatch, qid } = this.props;\r\n\r\n    dispatch(handleAddAnswer(qid, value));\r\n  };\r\n\r\n  render() {\r\n    const { optionOne, optionTwo } = this.props;\r\n    const { value } = this.state;\r\n    const isDisabled = value === \"\";\r\n\r\n    return (\r\n      <>\r\n        <Radio.Group onChange={this.onChange} value={value}>\r\n          <Radio\r\n            value={\"optionOne\"}\r\n            style={{ display: \"block\", height: \"30px\", lineHeight: \"30px\" }}\r\n          >\r\n            {optionOne.text}\r\n          </Radio>\r\n          <Radio\r\n            value={\"optionTwo\"}\r\n            style={{ display: \"block\", height: \"30px\", lineHeight: \"30px\" }}\r\n          >\r\n            {optionTwo.text}\r\n          </Radio>\r\n        </Radio.Group>\r\n        <Button\r\n          type=\"primary\"\r\n          block\r\n          shape=\"round\"\r\n          disabled={isDisabled}\r\n          style={{ marginTop: \"15px\" }}\r\n          onClick={this.handleSubmit}\r\n        >\r\n          Submit Answer\r\n        </Button>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect()(UnvotedCard);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport CardGridLayout from \"../layout/CardGridLayout\";\r\nimport VotedCard from \"../VotedCard\";\r\nimport UnvotedCard from \"../UnvotedCard\";\r\n\r\nexport class PollDetail extends Component {\r\n  render() {\r\n    if (this.props.question === undefined) {\r\n      return <Redirect to=\"/questions/invalid_id\" />;\r\n    }\r\n\r\n    const { question, users, isVoted, userVote, qid } = this.props;\r\n    const { author, optionOne, optionTwo } = question;\r\n\r\n    return (\r\n      <CardGridLayout\r\n        avatarURL={users[author].avatarURL}\r\n        data={question}\r\n        type=\"detail\"\r\n      >\r\n        {isVoted === true ? (\r\n          <VotedCard\r\n            userVote={userVote}\r\n            optionOne={optionOne}\r\n            optionTwo={optionTwo}\r\n          ></VotedCard>\r\n        ) : (\r\n          <UnvotedCard\r\n            optionOne={optionOne}\r\n            optionTwo={optionTwo}\r\n            qid={qid}\r\n          ></UnvotedCard>\r\n        )}\r\n      </CardGridLayout>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps({ users, questions, authedUser }, { location }) {\r\n  const qid = location.pathname.split(\"/\")[2];\r\n  const question = questions[qid];\r\n  const isVoted = Object.keys(users[authedUser].answers).includes(qid);\r\n  const userVote = users[authedUser].answers[qid];\r\n\r\n  return {\r\n    qid,\r\n    question,\r\n    users,\r\n    isVoted,\r\n    userVote,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(PollDetail);\r\n","import React from \"react\";\r\nimport { Result } from \"antd\";\r\n\r\nfunction ErrorPage() {\r\n  return (\r\n    <Result\r\n      status=\"404\"\r\n      title=\"404\"\r\n      subTitle=\"Sorry, the page you visited does not exist.\"\r\n    />\r\n  );\r\n}\r\n\r\nexport default ErrorPage;\r\n","import React from \"react\";\r\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport LoadingBar from \"react-redux-loading-bar\";\r\n\r\nimport HomePage from \"./components/pages/HomePage\";\r\nimport LoginPage from \"./components/pages/LoginPage\";\r\nimport LeaderBoard from \"./components/pages/LeaderBoard\";\r\nimport NewQuestion from \"./components/pages/NewQuestion\";\r\nimport MyLayout from \"./components/layout/MyLayout\";\r\nimport NavBar from \"./components/NavBar\";\r\nimport PollDetail from \"./components/pages/PollDetail\";\r\nimport ErrorPage from \"./components/pages/ErrorPage\";\r\n\r\nfunction App(props) {\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"App\">\r\n        <LoadingBar style={{ backgroundColor: \"skyblue\", height: \"5px\" }} />\r\n        <MyLayout>\r\n          {props.authedUser ? (\r\n            <>\r\n              <NavBar />\r\n              <Switch>\r\n                <Route path=\"/\" exact component={HomePage} />\r\n                <Route path=\"/add\" component={NewQuestion} />\r\n                <Route path=\"/leaderboard\" component={LeaderBoard} />\r\n                <Route path=\"/questions/invalid_id\" component={ErrorPage} />\r\n                <Route path=\"/questions/:question_id\" component={PollDetail} />\r\n                <Route component={ErrorPage} />\r\n              </Switch>\r\n            </>\r\n          ) : (\r\n            <Route path=\"/\" component={LoginPage} />\r\n          )}\r\n        </MyLayout>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nfunction mapStateToProps({ authedUser }) {\r\n  return {\r\n    authedUser,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import { combineReducers } from \"redux\";\r\nimport authedUser from \"./authedUser\";\r\nimport questions from \"./questions\";\r\nimport users from \"./users\";\r\nimport currentPage from \"./currentPage\";\r\nimport { loadingBarReducer } from \"react-redux-loading-bar\";\r\n\r\nexport default combineReducers({\r\n  authedUser,\r\n  questions,\r\n  users,\r\n  currentPage,\r\n  loadingBar: loadingBarReducer,\r\n});\r\n","import { SET_AUTHED_USER } from \"../actions/authedUser\";\r\n\r\nexport default function authedUser(state = null, action) {\r\n  switch (action.type) {\r\n    case SET_AUTHED_USER:\r\n      return action.id;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_QUESIONS,\r\n  ADD_QUESTIONS,\r\n  ADD_ANSWER,\r\n} from \"../actions/questions\";\r\n\r\nexport default function questions(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_QUESIONS:\r\n      return {\r\n        ...state,\r\n        ...action.questions,\r\n      };\r\n    case ADD_QUESTIONS:\r\n      return {\r\n        ...state,\r\n        [action.question.id]: action.question,\r\n      };\r\n    case ADD_ANSWER:\r\n      const { authedUser, qid, answer } = action;\r\n      return {\r\n        ...state,\r\n        [qid]: {\r\n          ...state[qid],\r\n          [answer]: {\r\n            ...state[qid][answer],\r\n            votes: [...state[qid][answer].votes, authedUser],\r\n          },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  RECEIVE_USERS,\r\n  ADD_QUESTION_TO_USER,\r\n  ADD_ANSWER_TO_USER,\r\n} from \"../actions/users\";\r\n\r\nexport default function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case RECEIVE_USERS:\r\n      return {\r\n        ...state,\r\n        ...action.users,\r\n      };\r\n    case ADD_QUESTION_TO_USER:\r\n      const { author, id } = action.question;\r\n      return {\r\n        ...state,\r\n        [author]: {\r\n          ...state[author],\r\n          questions: [...state[author].questions, id],\r\n        },\r\n      };\r\n    case ADD_ANSWER_TO_USER:\r\n      const { authedUser, qid, answer } = action;\r\n      console.log(\"users -> action\", action);\r\n      return {\r\n        ...state,\r\n        [authedUser]: {\r\n          ...state[authedUser],\r\n          answers: { ...state[authedUser].answers, [qid]: answer },\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { SET_PAGE } from \"../actions/currentPage\";\r\n\r\nexport default function currentPage(state = \"home\", action) {\r\n  switch (action.type) {\r\n    case SET_PAGE:\r\n      return action.page;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const logger = (store) => (next) => (action) => {\r\n  console.group(action.type);\r\n  console.log(\"The action: \", action);\r\n  const returnValue = next(action);\r\n  console.log(\"The state: \", store.getState());\r\n  console.groupEnd();\r\n\r\n  return returnValue;\r\n};\r\n\r\nexport default logger;\r\n","import thunk from \"redux-thunk\";\r\nimport logger from \"./logger\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\nexport default applyMiddleware(thunk, logger);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { createStore } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reducers from \"./reducers\";\r\nimport middleware from \"./middleware\";\r\n\r\nconst store = createStore(reducers, middleware);\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}